
Running comprehensive virtual column function tests...
=========================================================
Testing cleave#vcol_to_byte() with ASCII content...
PASS: ASCII: vcol 1 -> byte 0
PASS: ASCII: vcol 2 -> byte 1
PASS: ASCII: vcol 5 -> byte 4
PASS: ASCII: vcol 6 -> byte 5 (end)
PASS: ASCII: vcol beyond string -> -1
PASS: Empty string: vcol 1 -> byte 0
PASS: Invalid vcol 0 -> byte 0
PASS: Invalid vcol -1 -> byte 0
PASS: Single char: vcol 1 -> byte 0
PASS: Single char: vcol 2 -> byte 1
TestVcolToByteASCII: 10/10 tests passed
Testing cleave#vcol_to_byte() with tabs...
PASS: Tab ts=8: vcol 1 -> byte 0
PASS: Tab ts=8: vcol 2 -> byte 1 (tab start)
PASS: Tab ts=8: vcol 9 -> byte 2 (after tab)
PASS: Tab ts=4: vcol 2 -> byte 1 (tab start)
PASS: Tab ts=4: vcol 5 -> byte 2 (after tab)
PASS: Multiple tabs: vcol 1 -> byte 0
PASS: Multiple tabs: vcol 5 -> byte 1
PASS: Multiple tabs: vcol 9 -> byte 2
PASS: Tab mid-string: vcol 3 -> byte 2
PASS: Tab mid-string: vcol 5 -> byte 3
TestVcolToByteTabs: 10/10 tests passed
Testing cleave#vcol_to_byte() with CJK characters...
PASS: CJK: vcol 1 -> byte 0
PASS: CJK: vcol 3 -> byte 3 (second char)
PASS: CJK: vcol 5 -> byte 6 (end)
PASS: CJK: vcol beyond -> -1
PASS: Mixed: vcol 1 -> byte 0
PASS: Mixed: vcol 2 -> byte 1 (CJK start)
PASS: Mixed: vcol 4 -> byte 4 (after CJK)
PASS: Mixed: vcol 5 -> byte 5 (end)
PASS: Japanese: vcol 1 -> byte 0
PASS: Japanese: vcol 3 -> byte 3
PASS: Korean: vcol 1 -> byte 0
PASS: Korean: vcol 3 -> byte 3
TestVcolToByteCJK: 12/12 tests passed
Testing cleave#vcol_to_byte() with emoji...
PASS: Emoji: vcol 1 -> byte 0
PASS: Emoji: vcol 3 -> byte 4 (second emoji)
PASS: Emoji mixed: vcol 1 -> byte 0
PASS: Emoji mixed: vcol 2 -> byte 1
PASS: Emoji mixed: vcol 4 -> byte 5
TestVcolToByteEmoji: 5/5 tests passed
Testing cleave#vcol_to_byte() with complex mixed content...
PASS: Complex: vcol 1 -> byte 0
PASS: Complex: vcol 6 -> byte 5 (tab)
PASS: Real content: vcol 1 -> byte 0
PASS: Real content: vcol 6 -> byte 5
TestVcolToByteComplex: 4/4 tests passed
Testing cleave#byte_to_vcol() with ASCII content...
PASS: ASCII: byte 0 -> vcol 1
PASS: ASCII: byte 1 -> vcol 2
PASS: ASCII: byte 4 -> vcol 5
PASS: ASCII: byte 5 -> vcol 6
PASS: ASCII: byte beyond -> vcol 6
PASS: Empty string: byte 0 -> vcol 1
PASS: Invalid byte -1 -> vcol 1
TestByteToVcolASCII: 7/7 tests passed
Testing cleave#byte_to_vcol() with tabs...
PASS: Tab ts=8: byte 0 -> vcol 1
PASS: Tab ts=8: byte 1 -> vcol 2
PASS: Tab ts=8: byte 2 -> vcol 9
PASS: Tab ts=4: byte 1 -> vcol 2
PASS: Tab ts=4: byte 2 -> vcol 5
TestByteToVcolTabs: 5/5 tests passed
Testing cleave#byte_to_vcol() with CJK characters...
PASS: CJK: byte 0 -> vcol 1
PASS: CJK: byte 3 -> vcol 3
PASS: CJK: byte 6 -> vcol 5
PASS: Mixed: byte 0 -> vcol 1
PASS: Mixed: byte 1 -> vcol 2
PASS: Mixed: byte 4 -> vcol 4
PASS: Mixed: byte 5 -> vcol 5
TestByteToVcolCJK: 7/7 tests passed
Testing cleave#virtual_strpart() with ASCII content...
PASS: ASCII: extract from vcol 1
PASS: ASCII: extract from vcol 2
PASS: ASCII: extract vcol 1-2
PASS: ASCII: extract vcol 2-5
PASS: ASCII: extract last char
PASS: ASCII: extract beyond string
PASS: Empty string: extract from vcol 1
PASS: Invalid vcol 0 -> extract from vcol 1
PASS: Negative end_vcol -> extract to end
PASS: Zero end_vcol -> extract to end
TestVirtualStrpartASCII: 10/10 tests passed
Testing cleave#virtual_strpart() with CJK characters...
PASS: CJK: extract from vcol 1
PASS: CJK: extract from vcol 3
PASS: CJK: extract vcol 1-3
PASS: CJK: extract mid-character -> empty
PASS: Mixed: extract from vcol 1
PASS: Mixed: extract from vcol 2
PASS: Mixed: extract vcol 1-2
PASS: Mixed: extract vcol 2-4
PASS: Mixed: extract vcol 4-5
PASS: Japanese: extract first char
PASS: Korean: extract first char
TestVirtualStrpartCJK: 11/11 tests passed
Testing cleave#virtual_strpart() with tabs...
PASS: Tab: extract from vcol 1
PASS: Tab: extract from vcol 2
PASS: Tab: extract after tab
PASS: Tab: extract before tab
PASS: Multiple tabs: extract first tab
PASS: Multiple tabs: extract second tab
TestVirtualStrpartTabs: 6/6 tests passed
Testing cleave#virtual_strpart() with emoji...
PASS: Emoji: extract from vcol 1
PASS: Emoji: extract from vcol 3
PASS: Emoji: extract vcol 1-3
PASS: Emoji mixed: extract from vcol 1
PASS: Emoji mixed: extract from vcol 2
PASS: Emoji mixed: extract vcol 1-2
PASS: Emoji mixed: extract vcol 2-4
TestVirtualStrpartEmoji: 7/7 tests passed
Testing round-trip conversions...
PASS: Round-trip: 'hello world' vcol 1
PASS: Round-trip: 'hello world' vcol 2
PASS: Round-trip: 'hello world' vcol 3
PASS: Round-trip: 'hello world' vcol 4
PASS: Round-trip: 'hello world' vcol 5
PASS: Round-trip: 'hello world' vcol 6
PASS: Round-trip: 'hello world' vcol 7
PASS: Round-trip: 'hello world' vcol 8
PASS: Round-trip: 'hello world' vcol 9
PASS: Round-trip: 'hello world' vcol 10
PASS: Round-trip: 'hello world' vcol 11
PASS: Round-trip: 'hello world' vcol 12
PASS: Round-trip: '你好世界' vcol 1
FAIL: Round-trip: '你好世界' vcol 2
  Expected: 2
  Actual: 3
PASS: Round-trip: '你好世界' vcol 3
FAIL: Round-trip: '你好世界' vcol 4
  Expected: 4
  Actual: 5
PASS: Round-trip: '你好世界' vcol 5
FAIL: Round-trip: '你好世界' vcol 6
  Expected: 6
  Actual: 7
PASS: Round-trip: '你好世界' vcol 7
FAIL: Round-trip: '你好世界' vcol 8
  Expected: 8
  Actual: 9
PASS: Round-trip: '你好世界' vcol 9
PASS: Round-trip: 'a^Ib^Ic' vcol 1
PASS: Round-trip: 'a^Ib^Ic' vcol 2
FAIL: Round-trip: 'a^Ib^Ic' vcol 3
  Expected: 3
  Actual: 4
PASS: Round-trip: 'a^Ib^Ic' vcol 4
PASS: Round-trip: 'a^Ib^Ic' vcol 5
FAIL: Round-trip: 'a^Ib^Ic' vcol 6
  Expected: 6
  Actual: 7
PASS: Round-trip: 'a^Ib^Ic' vcol 7
PASS: Round-trip: 'a^Ib^Ic' vcol 8
PASS: Round-trip: 'mixed你好text' vcol 1
PASS: Round-trip: 'mixed你好text' vcol 2
PASS: Round-trip: 'mixed你好text' vcol 3
PASS: Round-trip: 'mixed你好text' vcol 4
PASS: Round-trip: 'mixed你好text' vcol 5
PASS: Round-trip: 'mixed你好text' vcol 6
FAIL: Round-trip: 'mixed你好text' vcol 7
  Expected: 7
  Actual: 8
PASS: Round-trip: 'mixed你好text' vcol 8
FAIL: Round-trip: 'mixed你好text' vcol 9
  Expected: 9
  Actual: 10
PASS: Round-trip: 'mixed你好text' vcol 10
PASS: Round-trip: 'mixed你好text' vcol 11
PASS: Round-trip: 'mixed你好text' vcol 12
PASS: Round-trip: 'mixed你好text' vcol 13
PASS: Round-trip: 'mixed你好text' vcol 14
PASS: Round-trip: '😀😃😄😁' vcol 1
FAIL: Round-trip: '😀😃😄😁' vcol 2
  Expected: 2
  Actual: 3
PASS: Round-trip: '😀😃😄😁' vcol 3
FAIL: Round-trip: '😀😃😄😁' vcol 4
  Expected: 4
  Actual: 5
PASS: Round-trip: '😀😃😄😁' vcol 5
FAIL: Round-trip: '😀😃😄😁' vcol 6
  Expected: 6
  Actual: 7
PASS: Round-trip: '😀😃😄😁' vcol 7
FAIL: Round-trip: '😀😃😄😁' vcol 8
  Expected: 8
  Actual: 9
PASS: Round-trip: '😀😃😄😁' vcol 9
PASS: Round-trip: 'Code 💻 + Coffee ☕' vcol 1
PASS: Round-trip: 'Code 💻 + Coffee ☕' vcol 2
PASS: Round-trip: 'Code 💻 + Coffee ☕' vcol 3
PASS: Round-trip: 'Code 💻 + Coffee ☕' vcol 4
PASS: Round-trip: 'Code 💻 + Coffee ☕' vcol 5
PASS: Round-trip: 'Code 💻 + Coffee ☕' vcol 6
FAIL: Round-trip: 'Code 💻 + Coffee ☕' vcol 7
  Expected: 7
  Actual: 8
PASS: Round-trip: 'Code 💻 + Coffee ☕' vcol 8
PASS: Round-trip: 'Code 💻 + Coffee ☕' vcol 9
PASS: Round-trip: 'Code 💻 + Coffee ☕' vcol 10
PASS: Round-trip: 'Code 💻 + Coffee ☕' vcol 11
PASS: Round-trip: 'Code 💻 + Coffee ☕' vcol 12
PASS: Round-trip: 'Code 💻 + Coffee ☕' vcol 13
PASS: Round-trip: 'Code 💻 + Coffee ☕' vcol 14
PASS: Round-trip: 'Code 💻 + Coffee ☕' vcol 15
PASS: Round-trip: 'Code 💻 + Coffee ☕' vcol 16
PASS: Round-trip: 'Code 💻 + Coffee ☕' vcol 17
PASS: Round-trip: 'Code 💻 + Coffee ☕' vcol 18
FAIL: Round-trip: 'Code 💻 + Coffee ☕' vcol 19
  Expected: 19
  Actual: 20
PASS: Round-trip: 'Code 💻 + Coffee ☕' vcol 20
PASS: Round-trip: '' vcol 1
PASS: Round-trip: 'a' vcol 1
PASS: Round-trip: 'a' vcol 2
PASS: Round-trip: '你' vcol 1
FAIL: Round-trip: '你' vcol 2
  Expected: 2
  Actual: 3
PASS: Round-trip: '你' vcol 3
PASS: Round-trip: '😀' vcol 1
FAIL: Round-trip: '😀' vcol 2
  Expected: 2
  Actual: 3
PASS: Round-trip: '😀' vcol 3
TestRoundTripConversions: 65/81 tests passed
Testing with real test data files...
PASS: ASCII data: valid byte position for 'This is a simple ASCII test file.' vcol 1
PASS: ASCII data: valid byte position for 'This is a simple ASCII test file.' vcol 2
PASS: ASCII data: valid byte position for 'This is a simple ASCII test file.' vcol 3
PASS: ASCII data: valid byte position for 'This is a simple ASCII test file.' vcol 4
PASS: ASCII data: valid byte position for 'This is a simple ASCII test file.' vcol 5
PASS: ASCII data: valid byte position for 'This is a simple ASCII test file.' vcol 6
PASS: ASCII data: valid byte position for 'This is a simple ASCII test file.' vcol 7
PASS: ASCII data: valid byte position for 'This is a simple ASCII test file.' vcol 8
PASS: ASCII data: valid byte position for 'This is a simple ASCII test file.' vcol 9
PASS: ASCII data: valid byte position for 'This is a simple ASCII test file.' vcol 10
PASS: ASCII data: valid byte position for 'This is a simple ASCII test file.' vcol 11
PASS: ASCII data: valid byte position for 'This is a simple ASCII test file.' vcol 12
PASS: ASCII data: valid byte position for 'This is a simple ASCII test file.' vcol 13
PASS: ASCII data: valid byte position for 'This is a simple ASCII test file.' vcol 14
PASS: ASCII data: valid byte position for 'This is a simple ASCII test file.' vcol 15
PASS: ASCII data: valid byte position for 'This is a simple ASCII test file.' vcol 16
PASS: ASCII data: valid byte position for 'This is a simple ASCII test file.' vcol 17
PASS: ASCII data: valid byte position for 'This is a simple ASCII test file.' vcol 18
PASS: ASCII data: valid byte position for 'This is a simple ASCII test file.' vcol 19
PASS: ASCII data: valid byte position for 'This is a simple ASCII test file.' vcol 20
PASS: ASCII data: valid byte position for 'This is a simple ASCII test file.' vcol 21
PASS: ASCII data: valid byte position for 'This is a simple ASCII test file.' vcol 22
PASS: ASCII data: valid byte position for 'This is a simple ASCII test file.' vcol 23
PASS: ASCII data: valid byte position for 'This is a simple ASCII test file.' vcol 24
PASS: ASCII data: valid byte position for 'This is a simple ASCII test file.' vcol 25
PASS: ASCII data: valid byte position for 'This is a simple ASCII test file.' vcol 26
PASS: ASCII data: valid byte position for 'This is a simple ASCII test file.' vcol 27
PASS: ASCII data: valid byte position for 'This is a simple ASCII test file.' vcol 28
PASS: ASCII data: valid byte position for 'This is a simple ASCII test file.' vcol 29
PASS: ASCII data: valid byte position for 'This is a simple ASCII test file.' vcol 30
PASS: ASCII data: valid byte position for 'This is a simple ASCII test file.' vcol 31
PASS: ASCII data: valid byte position for 'This is a simple ASCII test file.' vcol 32
PASS: ASCII data: valid byte position for 'This is a simple ASCII test file.' vcol 33
PASS: ASCII data: valid byte position for 'This is a simple ASCII test file.' vcol 34
PASS: ASCII data: valid byte position for 'Numbers: 0123456789' vcol 1
PASS: ASCII data: valid byte position for 'Numbers: 0123456789' vcol 2
PASS: ASCII data: valid byte position for 'Numbers: 0123456789' vcol 3
PASS: ASCII data: valid byte position for 'Numbers: 0123456789' vcol 4
PASS: ASCII data: valid byte position for 'Numbers: 0123456789' vcol 5
PASS: ASCII data: valid byte position for 'Numbers: 0123456789' vcol 6
PASS: ASCII data: valid byte position for 'Numbers: 0123456789' vcol 7
PASS: ASCII data: valid byte position for 'Numbers: 0123456789' vcol 8
PASS: ASCII data: valid byte position for 'Numbers: 0123456789' vcol 9
PASS: ASCII data: valid byte position for 'Numbers: 0123456789' vcol 10
PASS: ASCII data: valid byte position for 'Numbers: 0123456789' vcol 11
PASS: ASCII data: valid byte position for 'Numbers: 0123456789' vcol 12
PASS: ASCII data: valid byte position for 'Numbers: 0123456789' vcol 13
PASS: ASCII data: valid byte position for 'Numbers: 0123456789' vcol 14
PASS: ASCII data: valid byte position for 'Numbers: 0123456789' vcol 15
PASS: ASCII data: valid byte position for 'Numbers: 0123456789' vcol 16
PASS: ASCII data: valid byte position for 'Numbers: 0123456789' vcol 17
PASS: ASCII data: valid byte position for 'Numbers: 0123456789' vcol 18
PASS: ASCII data: valid byte position for 'Numbers: 0123456789' vcol 19
PASS: ASCII data: valid byte position for 'Numbers: 0123456789' vcol 20
PASS: ASCII data: valid byte position for 'Line with    multiple    spaces.' vcol 1
PASS: ASCII data: valid byte position for 'Line with    multiple    spaces.' vcol 2
PASS: ASCII data: valid byte position for 'Line with    multiple    spaces.' vcol 3
PASS: ASCII data: valid byte position for 'Line with    multiple    spaces.' vcol 4
PASS: ASCII data: valid byte position for 'Line with    multiple    spaces.' vcol 5
PASS: ASCII data: valid byte position for 'Line with    multiple    spaces.' vcol 6
PASS: ASCII data: valid byte position for 'Line with    multiple    spaces.' vcol 7
PASS: ASCII data: valid byte position for 'Line with    multiple    spaces.' vcol 8
PASS: ASCII data: valid byte position for 'Line with    multiple    spaces.' vcol 9
PASS: ASCII data: valid byte position for 'Line with    multiple    spaces.' vcol 10
PASS: ASCII data: valid byte position for 'Line with    multiple    spaces.' vcol 11
PASS: ASCII data: valid byte position for 'Line with    multiple    spaces.' vcol 12
PASS: ASCII data: valid byte position for 'Line with    multiple    spaces.' vcol 13
PASS: ASCII data: valid byte position for 'Line with    multiple    spaces.' vcol 14
PASS: ASCII data: valid byte position for 'Line with    multiple    spaces.' vcol 15
PASS: ASCII data: valid byte position for 'Line with    multiple    spaces.' vcol 16
PASS: ASCII data: valid byte position for 'Line with    multiple    spaces.' vcol 17
PASS: ASCII data: valid byte position for 'Line with    multiple    spaces.' vcol 18
PASS: ASCII data: valid byte position for 'Line with    multiple    spaces.' vcol 19
PASS: ASCII data: valid byte position for 'Line with    multiple    spaces.' vcol 20
PASS: ASCII data: valid byte position for 'Line with    multiple    spaces.' vcol 21
PASS: ASCII data: valid byte position for 'Line with    multiple    spaces.' vcol 22
PASS: ASCII data: valid byte position for 'Line with    multiple    spaces.' vcol 23
PASS: ASCII data: valid byte position for 'Line with    multiple    spaces.' vcol 24
PASS: ASCII data: valid byte position for 'Line with    multiple    spaces.' vcol 25
PASS: ASCII data: valid byte position for 'Line with    multiple    spaces.' vcol 26
PASS: ASCII data: valid byte position for 'Line with    multiple    spaces.' vcol 27
PASS: ASCII data: valid byte position for 'Line with    multiple    spaces.' vcol 28
PASS: ASCII data: valid byte position for 'Line with    multiple    spaces.' vcol 29
PASS: ASCII data: valid byte position for 'Line with    multiple    spaces.' vcol 30
PASS: ASCII data: valid byte position for 'Line with    multiple    spaces.' vcol 31
PASS: ASCII data: valid byte position for 'Line with    multiple    spaces.' vcol 32
PASS: ASCII data: valid byte position for 'Line with    multiple    spaces.' vcol 33
PASS: CJK data: valid byte position for vcol 1
PASS: CJK data: valid byte position for vcol 2
PASS: CJK data: valid byte position for vcol 3
PASS: CJK data: valid byte position for vcol 4
PASS: CJK data: valid byte position for vcol 5
PASS: CJK data: valid byte position for vcol 6
PASS: CJK data: valid byte position for vcol 7
PASS: CJK data: valid byte position for vcol 8
PASS: CJK data: valid byte position for vcol 9
PASS: CJK data: valid byte position for vcol 10
PASS: CJK data: valid byte position for vcol 11
PASS: CJK data: valid byte position for vcol 12
PASS: CJK data: valid byte position for vcol 13
PASS: CJK data: valid byte position for vcol 14
PASS: CJK data: valid byte position for vcol 15
PASS: CJK data: valid byte position for vcol 16
PASS: CJK data: valid byte position for vcol 17
PASS: CJK data: valid byte position for vcol 18
PASS: CJK data: valid byte position for vcol 19
PASS: CJK data: valid byte position for vcol 20
PASS: CJK data: valid byte position for vcol 1
PASS: CJK data: valid byte position for vcol 2
PASS: CJK data: valid byte position for vcol 3
PASS: CJK data: valid byte position for vcol 4
PASS: CJK data: valid byte position for vcol 5
PASS: CJK data: valid byte position for vcol 6
PASS: CJK data: valid byte position for vcol 7
PASS: CJK data: valid byte position for vcol 8
PASS: CJK data: valid byte position for vcol 9
PASS: CJK data: valid byte position for vcol 10
PASS: CJK data: valid byte position for vcol 11
PASS: CJK data: valid byte position for vcol 12
PASS: CJK data: valid byte position for vcol 13
PASS: CJK data: valid byte position for vcol 14
PASS: CJK data: valid byte position for vcol 15
PASS: CJK data: valid byte position for vcol 16
PASS: CJK data: valid byte position for vcol 17
PASS: CJK data: valid byte position for vcol 18
PASS: CJK data: valid byte position for vcol 19
PASS: CJK data: valid byte position for vcol 20
PASS: CJK data: valid byte position for vcol 1
PASS: CJK data: valid byte position for vcol 2
PASS: CJK data: valid byte position for vcol 3
PASS: CJK data: valid byte position for vcol 4
PASS: CJK data: valid byte position for vcol 5
PASS: CJK data: valid byte position for vcol 6
PASS: CJK data: valid byte position for vcol 7
PASS: CJK data: valid byte position for vcol 8
PASS: CJK data: valid byte position for vcol 9
PASS: CJK data: valid byte position for vcol 10
PASS: CJK data: valid byte position for vcol 11
PASS: CJK data: valid byte position for vcol 12
PASS: CJK data: valid byte position for vcol 13
PASS: CJK data: valid byte position for vcol 14
PASS: CJK data: valid byte position for vcol 15
PASS: CJK data: valid byte position for vcol 16
PASS: CJK data: valid byte position for vcol 17
PASS: CJK data: valid byte position for vcol 18
PASS: CJK data: valid byte position for vcol 19
PASS: CJK data: valid byte position for vcol 20
PASS: Emoji data: valid byte position for vcol 1
PASS: Emoji data: valid byte position for vcol 2
PASS: Emoji data: valid byte position for vcol 3
PASS: Emoji data: valid byte position for vcol 4
PASS: Emoji data: valid byte position for vcol 5
PASS: Emoji data: valid byte position for vcol 6
PASS: Emoji data: valid byte position for vcol 7
PASS: Emoji data: valid byte position for vcol 8
PASS: Emoji data: valid byte position for vcol 9
PASS: Emoji data: valid byte position for vcol 10
PASS: Emoji data: valid byte position for vcol 11
PASS: Emoji data: valid byte position for vcol 12
PASS: Emoji data: valid byte position for vcol 13
PASS: Emoji data: valid byte position for vcol 14
PASS: Emoji data: valid byte position for vcol 15
PASS: Emoji data: valid byte position for vcol 1
PASS: Emoji data: valid byte position for vcol 2
PASS: Emoji data: valid byte position for vcol 3
PASS: Emoji data: valid byte position for vcol 4
PASS: Emoji data: valid byte position for vcol 5
PASS: Emoji data: valid byte position for vcol 6
PASS: Emoji data: valid byte position for vcol 7
PASS: Emoji data: valid byte position for vcol 8
PASS: Emoji data: valid byte position for vcol 9
PASS: Emoji data: valid byte position for vcol 10
PASS: Emoji data: valid byte position for vcol 11
PASS: Emoji data: valid byte position for vcol 12
PASS: Emoji data: valid byte position for vcol 13
PASS: Emoji data: valid byte position for vcol 14
PASS: Emoji data: valid byte position for vcol 15
TestWithRealTestData: 177/177 tests passed
=========================================================
COMPREHENSIVE TEST RESULTS:
Total: 336/352 tests passed
❌ 16 TESTS FAILED!

Running performance benchmarks...
Running performance benchmarks...
Benchmarking with 1000 iterations...
vcol_to_byte performance:   9.318855 seconds
byte_to_vcol performance:   8.603738 seconds
virtual_strpart performance:  28.206913 seconds
strdisplaywidth performance (10x iterations):   0.208217 seconds
Performance benchmark completed.
Note: Times may vary based on system performance and Vim version.
